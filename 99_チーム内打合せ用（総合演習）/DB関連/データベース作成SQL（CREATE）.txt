・データベース作成
CREATE DATABASE employee_admin;


・社員情報テーブル
CREATE TABLE employee(
employeeId INT NOT NULL,
password VARCHAR(20) NOT NULL,
employeeName VARCHAR(30) NOT NULL,
kana VARCHAR(50),
gender VARCHAR(1) NOT NULL,
departmentCode VARCHAR(3) NOT NULL,
divisionCode VARCHAR(2),
positionCode VARCHAR(1),
positionMemo VARCHAR(20),
naisenNumber VARCHAR(10),
publicCellphoneNumber VARCHAR(13),
adminFlag TINYINT(1) DEFAULT 0,
registrationDateTime DATETIME NOT NULL,
PRIMARY KEY(employeeId)
);

・拠点マスタ
CREATE TABLE base(
baseCode VARCHAR(1) NOT NULL,
baseName VARCHAR(10) NOT NULL,
PRIMARY KEY(baseCode)
);

・部署マスタ
CREATE TABLE department(
departmentCode VARCHAR(3) NOT NULL,
departmentName VARCHAR(20) NOT NULL,
baseCode VARCHAR(1) NOT NULL,
PRIMARY KEY(departmentCode)
);

・課マスタ
CREATE TABLE division(
divisionCode VARCHAR(2) NOT NULL,
divisionName VARCHAR(20) NOT NULL,
PRIMARY KEY(divisionCode)
);

・役職マスタ
CREATE TABLE position_table(
positionCode VARCHAR(1) NOT NULL,
positionName VARCHAR(20) NOT NULL,
PRIMARY KEY(positionCode)
);



・ビュー表作成(ビュー表名：employee_view)
CREATE VIEW employee_view as
SELECT E.employeeId ,E.password ,E.employeeName ,E.kana ,E.gender ,
B.baseCode ,B.baseName ,D.departmentCode ,D.departmentName ,DI.divisionCode ,
DI.divisionName ,P.positionCode ,P.positionName ,E.positionMemo ,
E.naisenNumber ,E.publicCellphoneNumber ,E.adminFlag ,E.registrationDateTime
FROM ((( employee E INNER JOIN department D ON E.departmentCode = D.departmentCode)
INNER JOIN base B ON B.baseCode = D.baseCode)
INNER JOIN division DI ON E.divisionCode = DI.divisionCode)
INNER JOIN position_table P ON E.positionCode = P.positionCode;





・全テーブル結合表
SELECT E.employeeId ,E.password ,E.employeeName ,E.kana ,E.gender ,
B.baseCode ,B.baseName ,D.departmentCode ,D.departmentName ,DI.divisionCode ,
DI.divisionName ,P.positionCode ,P.positionName ,E.positionMemo ,
E.naisenNumber ,E.publicCellphoneNumber ,E.adminFlag ,E.registrationDateTime
FROM ((( employee E INNER JOIN department D ON E.departmentCode = D.departmentCode)
INNER JOIN base B ON B.baseCode = D.baseCode)
INNER JOIN division DI ON E.divisionCode = DI.divisionCode)
INNER JOIN position_table P ON E.positionCode = P.positionCode;

