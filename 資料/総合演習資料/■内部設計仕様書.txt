■内部設計仕様書

　◎システム機能詳細

　　■controller(servlet)

　　　【 boadDo.java 】
　　　　　・doGetメソッド
　　　　　　　引数：
　　　　　　戻り値：

　　　　　処理詳細：
　　　　　　　・URL、ハイパーリンクでの呼び出しに対応
　　　　　　　・パラメータは無し
　　　　　　　・boardMain.jsp へフォワード転送

　　　　　・doPostメソッド
　　　　　　　引数：
　　　　　　戻り値：

　　　　　処理詳細：
　　　　　　　・フォームのPOSTでの呼び出しに対応
　　　　　　　・下記のパラメータを受け取る
　　　　　　　　　String name , email , comment , action , admin , Pass , delId

　　　　　　　・actionのパラメータによって異なる処理を行う
　　　　　　　　　・action=addの場合

　　　　　　　　　・action=adminの場合

　　　　　　　　　・action=delの場合

　　　　　　　・boardMain.jsp へフォワード転送


　　■view(JSP)

　　　【 boardMain.jsp 】
　　　　　・新規投稿入力フォーム
		<form action="/board2/BoardDo" method="post">

		name		text	名前
		email		text	e-mail
		comment		text	コメント
		action		hidden	value="add"

　　　　　・管理者パスワード入力フォーム
		<form action="/board2/BoardDo" method="post">

		adminpass	password 管理者用パスワード
　　　　　　　　action		hidden	value="admin"




　◎データベース詳細設計

　　　データベース名：boarddb
　　　　　ユーザー名：root
　　　　　パスワード：root00

	テーブル名：board_db

	id		INT		NOT NULL 、AUTO_INCREMENT 、PRIMARY KEY	投稿番号
	name		VARCHAR(12)						名前
	email		VARCHAR(20)						e-mail
	comment		VARCHAR(100)	NOT NULL				コメント
	dateTime	DATETIME						投稿日時(yyyy-MM-dd hh:mm:ss)

・コーディング規約













boardMain.jsp
	名前とコメントをリクエストスコープから取得
		・取得した結果nullの場合、空文字""に置換
		・検索用フォームのname, commentにセット
	注意書きの追加
		・コメントの右側に注意書き「※必須入力」
	新規で検索フォーム作成
		・名前（input type = "text" name="name")　※完全一致
		・コメント（input type = "text" name="comment")　※部分一致
		・検索（input type="submit"）※隠しパラメータ name="action" value="search"
		・名前とコメントは検索表示後に入力内容が引き継がれる（他のボタンクリック後は引き継がれない）
	掲示板の表示部分を変更
		・show(search(name,comment,boardList))
		
boadDo.java
	検索ボタンクリック時の挙動作成
		doPost()メソッド内action=searchのとき
			・リクエストパラメータからnameとcommentを取得
			・リクエストスコープに取得したnameとcommentを格納
			・boardMain.jspに転送

BoardLogic.java
	searchメソッド作成
		・引数：String name、String comment、ArrayList<BoardBean> boardList
		・戻り値：ArrayList<BoardBean>
		・処理概要：引数で渡された掲示板リストのうち、以下の条件に合致する掲示板リストを戻り値として返す
			・新しく掲示板リストArrayList<BoardBean>オブジェクトをインスタンスし、以下の条件に合致する掲示板リストを格納する
				条件
				・名前とコメント両方入力ありの場合（空文字""でない）：名前に完全一致かつコメントに部分一致する掲示板
				・名前入力あり、コメント入力なしの場合：名前に完全一致する掲示板
				・名前入力なし、コメント入力ありの場合：コメントに部分一致する掲示板
				・名前とコメント両方入力なしの場合：全ての掲示板　※この場合ArrayList<BoardBean>オブジェクトをインスタンスせず、そのまま引数のboardListを戻り値として返す）
				・boardListがnullの場合（名前とコメントの入力有無問わず）：ArrayList<BoardBean>オブジェクトをインスタンスせず、そのまま引数のboardListを戻り値として返す


10/18改修内容

DaoLogic.java(dao　パッケージ)
	Connection変数作成クラス変数（クラス変数）：conn　※private
		・初期値：null

	取得メソッド作成：findBoard
		・引数：String
		・戻り値：ArrayList<BoardBean>

	更新メソッド作成：updateBoard
		・引数：String
		・戻り値：Boolean

	DBに接続するメソッド作成：startDB　※private
		・引数：なし
		・戻り値：なし	

	DBから切断するメソッド作成：endDB　※private
		・引数：なし
		・戻り値：Boolean

boadDo.java
	アプリケーションスコープ利用箇所を削除

boardMain.jsp
	アプリケーションスコープ利用箇所を削除

	掲示板表示処理修正
		・logic.show(logic.search(name,comment,boardList))
		→logic.show(name,comment)

boardAdmin.jsp
	アプリケーションスコープ利用箇所を削除

	掲示板表示処理修正
		・logic.show(boardList)
		→logic.show()

	投稿削除ナンバーの選択肢修正
		・logic.selectBox(boardList)
		→logic.selectBox()

BoardLogic.java
	searchメソッド不要

	showメソッド修正
		・引数：String name、String comment
		・SQL文作成
		・DaoLogicのfindBoardにSQL文を渡し、boardListを取得

	showメソッド追加
		・引数：なし
		・処理：show("","");

	addメソッド修正
		・SQL文作成
		・DaoLogicのfindUpdateにSQL文を渡し、結果を取得（結果によってメッセージを変える）

	delメソッド修正
		・引数：int
		・SQL文作成
		・DaoLogicのfindUpdateにSQL文を渡し、結果を取得（結果によってメッセージを変える）

	selectBoxメソッド修正
		・引数：なし
		・SQL文作成
		・DaoLogicのfindBoardにSQL文を渡し、boardListを取得



















　◎システム概要

　　　データベースを使った簡単な掲示板の作成
　　　　・Apache Tomcat Webアプリケーションサーバーを使用
　　　　・言語はJava(JSP/Javaサーブレット/Javaアプリケーション)
　　　　・RDBMSはMySQL、DAOパターンモデルによりJDBCを使いDB操作を行う。
　　　　・ノートPCでもサーバーとして問題なく運用できる規模を想定
　　　　・MVCモデル設計によるシステム開発


　◎システム機能設計

　　　投稿内容表示機能		
　　　　・過去に投稿した内容を投稿の新しい順に表示させる。	
　　　　・表示させる投稿内容は下記の通り。	
　　　　　　① 投稿ナンバー
　　　　　　② 名前
　　　　　　③ E-MAIL
　　　　　　④ コメント
　　　　　　⑤ 投稿日時

　　　新規投稿機能		
　　　　・投稿内容表示と共に、画面上部に新規投稿を入力する欄を作成。	
　　　　・新規投稿を行う入力項目は下記の通り。	
　　　　　　① 名前
　　　　　　② E-MAIL
　　　　　　③ コメント
　　　　・入力内容に対する制約事項は下記の通り。	
　　　　　　① 名前が未入力の場合は、名前を「ゲスト」と置き換える。
　　　　　　② E-MAILは未入力も可能としない場合、「なし」と表示する。
　　　　　　③ コメントが入力の場合、データベースに格納せず、「コメントを入力してください」と出力する。
　　　　　　④ コメントはテキストエリアを使い、複数行の入力に対応させる。
　　　　・投稿ボタンを押すことにより入力したデータをデータベースに格納する。	
　　　　・格納後、元の画面に自動的に戻り、投稿の成否を画面上部に表示する。	
　　　　・投稿内容表示機能と新規投稿機能を一つにまとめた画面（掲示板メイン画面）

　　　投稿管理機能		
　　　　・管理者用の画面（掲示板管理画面）を作成し、その画面で現在の投稿内容表示からIDを指定して
　　　　　削除を行えるようにする。	
　　　　・削除IDは、半角数字のみ受付け、IDが存在しなかったり半角数字以外なら、削除せず	
　　　　　「IDが違います！存在するIDを半角数字で入力して下さい。」と表示する。	
　　　　・掲示板管理画面は、管理用パスワードを知っているものだけが表示・操作できる。	
　　　　・パスワードは、半角で「 root00 」とする。	
　　　　・掲示板メイン画面から、管理パスワードを入力してもらい掲示板管理画面に遷移する。	
　　　　・掲示板管理画面のイメージは別紙１の通り。	



　◎データ仕様書

　　　掲示板投稿データ
　　　・id	→重複しない値、1からの連番		→「No.」の横の数字
　　　・name	→最大文字数12文字、""の場合はゲスト	→「No.xx:」の横の文字列
　　　・email	→最大文字数20文字、""の場合はなし	→「E-Mail：」の横の文字列
　　　・comment	→最大文字数100文字、""の場合は禁止	→「コメント：」の横の文字列
　　　・dateTime→yyyy-MM-DD hh:mm:ss形式の日時		→「投稿日時：」の横の日付

　　　管理者パスワード
　　　・固定で「root00」とする。(将来的には、ユーザー管理をしたい)



　◎メッセージ一覧

	・m001	投稿しました。
		新規投稿ボタン（掲示板メイン）

	・m002	投稿を削除しました。
		送信ボタン（掲示板管理）

	・e001	コメントを入力してください。
		新規投稿ボタン（掲示板メイン）	コメントが未入力

	・e002	IDが違います！存在するIDを半角数字で入力して下さい。
		送信ボタン（掲示板管理)		半角数字以外が入力された or 存在しないID（投稿№）が入力された

	・e003	パスワードが違います。		
		送信ボタン（掲示板メイン）	間違った管理パスワードが入力された




